---

name: Variables and Concatenation

theory: |
  Variables and concatenation can be combined. Syntaxically nothing changes, because we know how to concatenate - that is, to join two strings:

  ```java
  var what = "Kings" + "road";
  System.out.println(what); // => Kingsroad
  ```

  This means that we can concatenate a string and a variable that contains a string:

  ```java
  var first = "Kings";
  var what = first + "road";
  System.out.println(what); // => Kingsroad
  ```

  We can even concatenate two variables that contain strings:

  ```java
  var first = "Kings";
  var last = "road";
  var what = first + last;
  System.out.println(what); //=> Kingsroad
  ```

  https://replit.com/@hexlet/java-basics-variables-4

instructions: |

  Websites constantly send emails to their users. A typical task is to automatically send a personalized email, where the username will be in the subject. If the user's name is stored somewhere in the website's database as a string, the task of generating the subject comes down to concatenation: for example, you need to concatenate the string *Hello* with the string that contains the name.

  Write a program that will generate the subject and body of the email, using the already defined variables, and output the resulting strings to the screen.

  For the subject, use the variables `firstName` and `greeting`, a comma, and an exclamation mark. Print this in the correct order.

  For the body of the email, use the variables `info` and `intro`, with the second sentence on a new line.

  The result on the screen should look like this:

  <pre class='hexlet-basics-output'>
  Hello, Joffrey!
  Here is important information about your account security.
  We couldn't verify your mother's maiden name.
  </pre>

  Complete the task using only two `System.out.println()`.

tips:
  - |
    Think about which string and in what order you need to concatenate the variables to get such a two-line output for the body of the email.
  - |
    Remember that you can create a string that contains only the control sequence `\n`.